<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>09-表的内外连接</title>
      <link href="/2019/01/03/09-%E8%A1%A8%E7%9A%84%E5%86%85%E5%A4%96%E8%BF%9E%E6%8E%A5/"/>
      <url>/2019/01/03/09-%E8%A1%A8%E7%9A%84%E5%86%85%E5%A4%96%E8%BF%9E%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<p><strong>配合食用效果极佳 </strong></p><p><strong>内连接查询：</strong>往往使用频繁，可以配合多种查询方法食用。</p><p>内连接就是两表的笛卡儿积表的基础上进行筛选</p><p><strong>外连接查询：</strong>首先要确定<strong>基准表</strong>（<strong>基准信息</strong>），即左连接的左表，右连接的右表。然后确定<strong>结合表</strong>，结合表需要的筛选条件。</p><a id="more"></a><h1 id="09-表的内外连接"><a href="#09-表的内外连接" class="headerlink" title="09 表的内外连接"></a>09 表的内外连接</h1><h2 id="9-1内链接"><a href="#9-1内链接" class="headerlink" title="9.1内链接"></a>9.1内链接</h2><p>内连接实际上就是利用where子句对两种表形成的笛卡儿积进行筛选，我们前面学习的查询都是内连接，也是在开发过程中使用的最多的连接查询</p><p>语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 字段 from 表1 inner join 表2 on 连接条件 and其他连接条件;</span><br></pre></td></tr></table></figure><blockquote><p>之前学的就是内连接</p></blockquote><p>显示smith的名字和部门名称</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">-- 之前写法</span><br><span class="line">select ename,dename from emp,dept where emp.deptno=dept.deptno and ename=&apos;smith&apos;;</span><br><span class="line"></span><br><span class="line">-- 标准内连接写法</span><br><span class="line">select ename,dename from emp inner join dept on emp.deptno=dept.depyno and ename=&apos;smith&apos;;</span><br></pre></td></tr></table></figure><p><strong>理解：</strong>inner join就是inner join两个表的笛卡儿积中筛选on 后的条件</p><h2 id="9-2外连接"><a href="#9-2外连接" class="headerlink" title="9.2外连接"></a>9.2外连接</h2><p>外连接分为左连接右连接。（记住一种自己熟悉的即可）</p><h3 id="9-2-1左外连接"><a href="#9-2-1左外连接" class="headerlink" title="9.2.1左外连接"></a>9.2.1左外连接</h3><p><strong>左外连接:</strong>  如果联合查询的时，左侧的表我们完全显示 </p><p>语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 字段名 from 表名1 left join 表名2 on 连接条件</span><br></pre></td></tr></table></figure><p><strong>理解：</strong>left join就是左表（一定显示）和右表中on后筛选后的表的结合（以左表为基础上添加（符合筛选条件的）右表）</p><h3 id="9-2-2右外连接"><a href="#9-2-2右外连接" class="headerlink" title="9.2.2右外连接"></a>9.2.2右外连接</h3><p><strong>右连接：</strong>如果联合查询，右侧的表完全显示我们就说是右外连接。</p><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 字段 from 表明1 right join 表明2 on 连接条件</span><br></pre></td></tr></table></figure><p><strong>理解：</strong>left join就是右表（一定显示）和左表中on后筛选后的表的结合（以右表为基础上添加（符合筛选条件的）左标）</p><p><strong>小练习：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-- 键两张表</span><br><span class="line">create table stu (id int, name varchar(30));  -- 学生表 </span><br><span class="line">insert into stu values(1,&apos;jack&apos;),(2,&apos;tom&apos;),(3,&apos;kity&apos;),(4,&apos;nono&apos;); </span><br><span class="line"></span><br><span class="line">create table exam (id int, grade int);  -- 成绩表</span><br><span class="line">insert into exam values(1, 56),(2,76),(11, 8);</span><br></pre></td></tr></table></figure><ul><li><p><strong>查询所有学生的成绩，如果没有这个学生的成绩，也要将学生的个人信息显示出来。</strong></p><p><strong>分析：</strong>关键字:所有学生， 成绩，（没有成绩也要显示出来） （<strong>以学生表为基准表，结合成绩表</strong>）外连接（左右都可以）</p><p><strong>左外连接：</strong></p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from stu left inner exam on stu.id=exam.id;</span><br></pre></td></tr></table></figure><p>​    <strong>右外连接：</strong>（不适合，因为一般都是基准表在结合表的前面显示）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select stu.* from exam right inner stu on stu.id=exam.id;</span><br><span class="line"></span><br><span class="line">-- 改为：（太麻烦）</span><br><span class="line">select stu.id ,stu.name,exam.id,exam.grade from exam right join stu on stu.id=exam.id;</span><br></pre></td></tr></table></figure><ul><li><strong>对stu表和exam表联合查询，把所有的成绩都显示出来，即使这个成绩没有学生与它对应，也要显示出来</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from stu right join exam on stu.id=exam.id;</span><br></pre></td></tr></table></figure><ul><li><p><strong>列处部门名称和这些部门的员工信息，同时列出没有员工的部门</strong></p><p><strong>分析：</strong>关键字（部门名称，这些部分的员工信息，列出没有员工的部门）（<strong>以部门名称基准表，结合与员工表</strong>）外连接（左右都可以）</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- 方法一：</span><br><span class="line">select d.dname, e.* from dept d left join emp e on d.deptno=e.deptno; </span><br><span class="line">-- 方法二： </span><br><span class="line">select d.dname, e.* from emp e right join dept d on d.deptno=e.deptno;</span><br></pre></td></tr></table></figure><h1 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h1><blockquote><p>内连接查询：往往使用频繁，可以配合多种查询方法食用。</p><p>内连接就是两表的笛卡儿积表的基础上进行筛选</p><p>外连接查询：首先要确定<strong>基准表</strong>（<strong>基准信息</strong>），即左连接的左表，右连接的右表。然后确定<strong>结合表</strong>，结合表需要的筛选条件。</p></blockquote><blockquote><p><strong>SQL</strong>查询中各个关键字的执行先后顺序：</p><p>from &gt; on&gt; join &gt; where &gt; group by &gt; with &gt; having &gt; select &gt; distinct &gt; order by &gt; limit</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> MySQL数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL数据库 </tag>
            
            <tag> MySQL数据库练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL练习复合查询</title>
      <link href="/2019/01/03/MySQL%E7%BB%83%E4%B9%A0%E5%A4%8D%E5%90%88%E6%9F%A5%E8%AF%A2/"/>
      <url>/2019/01/03/MySQL%E7%BB%83%E4%B9%A0%E5%A4%8D%E5%90%88%E6%9F%A5%E8%AF%A2/</url>
      
        <content type="html"><![CDATA[<p><strong>复合查询（重点）</strong></p><ul><li>函数得使用</li></ul><ul><li><p>多表查询</p></li><li><p>自连接</p></li><li><p>子查询</p></li></ul><a id="more"></a><h1 id="07-MySQL-函数"><a href="#07-MySQL-函数" class="headerlink" title="07-MySQL 函数"></a>07-MySQL 函数</h1><h2 id="1-题目描述"><a href="#1-题目描述" class="headerlink" title="1.题目描述"></a>1.题目描述</h2><blockquote><p>查找字符串’10,A,B’ 中逗号’,’出现的次数cnt。</p></blockquote><p><strong>解答：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select length(&apos;10,A,B&apos;)-length(replace(&apos;10,A,B&apos;, &apos;,&apos; ,&apos;&apos;)) as cnt;</span><br></pre></td></tr></table></figure><h1 id="08-MySQL-复合查询"><a href="#08-MySQL-复合查询" class="headerlink" title="08-MySQL 复合查询"></a>08-MySQL 复合查询</h1><h2 id="1-题目描述-1"><a href="#1-题目描述-1" class="headerlink" title="1.题目描述"></a>1.题目描述</h2><blockquote><p>查找所有员工入职时候的薪水情况，给出emp_no以及salary， 并按照emp_no进行逆序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&gt; CREATE TABLE `employees` (</span><br><span class="line">&gt; `emp_no` int(11) NOT NULL,</span><br><span class="line">&gt; `birth_date` date NOT NULL,</span><br><span class="line">&gt; `first_name` varchar(14) NOT NULL,</span><br><span class="line">&gt; `last_name` varchar(16) NOT NULL,</span><br><span class="line">&gt; `gender` char(1) NOT NULL,</span><br><span class="line">&gt; `hire_date` date NOT NULL,</span><br><span class="line">&gt; PRIMARY KEY (`emp_no`));</span><br><span class="line">&gt; </span><br><span class="line">&gt; CREATE TABLE `salaries` (</span><br><span class="line">&gt; `emp_no` int(11) NOT NULL,</span><br><span class="line">&gt; `salary` int(11) NOT NULL,</span><br><span class="line">&gt; `from_date` date NOT NULL,</span><br><span class="line">&gt; `to_date` date NOT NULL,</span><br><span class="line">&gt; PRIMARY KEY (`emp_no`,`from_date`));</span><br><span class="line">&gt; </span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>解决1：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select e.emp_no, s.salary from employees as e, salaries as s where e.emp_no =s.emp_no and e.hire_date = s.from_date order by e.emp_no desc;</span><br></pre></td></tr></table></figure><p><strong>解决2：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select e.emp_no, s.salary from employees as e inner join salaries as s on e.emp_no = s.emp_no and e.hire_date = s.from_date order by e.emp_no desc;</span><br></pre></td></tr></table></figure><h2 id="2-题目描述"><a href="#2-题目描述" class="headerlink" title="2.题目描述"></a>2.题目描述</h2><blockquote><p>针对库中的所有表生成select count(*)对应的SQL语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&gt; CREATE TABLE `employees` (</span><br><span class="line">&gt; `emp_no` int(11) NOT NULL,</span><br><span class="line">&gt; `birth_date` date NOT NULL,</span><br><span class="line">&gt; `first_name` varchar(14) NOT NULL,</span><br><span class="line">&gt; `last_name` varchar(16) NOT NULL,</span><br><span class="line">&gt; `gender` char(1) NOT NULL,</span><br><span class="line">&gt; `hire_date` date NOT NULL,</span><br><span class="line">&gt; PRIMARY KEY (`emp_no`));</span><br><span class="line">&gt; create table emp_bonus(</span><br><span class="line">&gt; emp_no int not null,</span><br><span class="line">&gt; recevied datetime not null,</span><br><span class="line">&gt; btype smallint not null);</span><br><span class="line">&gt; </span><br><span class="line">&gt; CREATE TABLE `dept_emp` (</span><br><span class="line">&gt; `emp_no` int(11) NOT NULL,</span><br><span class="line">&gt; `dept_no` char(4) NOT NULL,</span><br><span class="line">&gt; `from_date` date NOT NULL,</span><br><span class="line">&gt; `to_date` date NOT NULL,</span><br><span class="line">&gt; PRIMARY KEY (`emp_no`,`dept_no`));</span><br><span class="line">&gt; </span><br><span class="line">&gt; CREATE TABLE `dept_manager` (</span><br><span class="line">&gt; `dept_no` char(4) NOT NULL,</span><br><span class="line">&gt; `emp_no` int(11) NOT NULL,</span><br><span class="line">&gt; `from_date` date NOT NULL,</span><br><span class="line">&gt; `to_date` date NOT NULL,</span><br><span class="line">&gt; PRIMARY KEY (`emp_no`,`dept_no`));</span><br><span class="line">&gt; </span><br><span class="line">&gt; CREATE TABLE `salaries` (</span><br><span class="line">&gt; `emp_no` int(11) NOT NULL,</span><br><span class="line">&gt; `salary` int(11) NOT NULL,</span><br><span class="line">&gt; `from_date` date NOT NULL,</span><br><span class="line">&gt; `to_date` date NOT NULL,</span><br><span class="line">&gt; PRIMARY KEY (`emp_no`,`from_date`));</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>解决：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select concat(&apos;select count(*) from &apos;,t.TABLE_NAME,&apos;;&apos;) AS cnts  from (select TABLE_NAME from information_schema.TABLES where TABLE_SCHEMA = database()) t;</span><br></pre></td></tr></table></figure><p><strong>解决：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select &quot;select count(*) from &quot;||name||&quot;;&quot; as cnts  from sqlite_master where type=&apos;table&apos;</span><br></pre></td></tr></table></figure><h2 id="3-题目描述"><a href="#3-题目描述" class="headerlink" title="3.题目描述"></a>3.题目描述</h2><blockquote><p>获取所有非manager的员工emp_no</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&gt; CREATE TABLE `dept_manager` (</span><br><span class="line">&gt; `dept_no` char(4) NOT NULL,</span><br><span class="line">&gt; `emp_no` int(11) NOT NULL,</span><br><span class="line">&gt; `from_date` date NOT NULL,</span><br><span class="line">&gt; `to_date` date NOT NULL,</span><br><span class="line">&gt; PRIMARY KEY (`emp_no`,`dept_no`));</span><br><span class="line">&gt; </span><br><span class="line">&gt; CREATE TABLE `employees` (</span><br><span class="line">&gt; `emp_no` int(11) NOT NULL,</span><br><span class="line">&gt; `birth_date` date NOT NULL,</span><br><span class="line">&gt; `first_name` varchar(14) NOT NULL,</span><br><span class="line">&gt; `last_name` varchar(16) NOT NULL,</span><br><span class="line">&gt; `gender` char(1) NOT NULL,</span><br><span class="line">&gt; `hire_date` date NOT NULL,</span><br><span class="line">&gt; PRIMARY KEY (`emp_no`));</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote><p><strong>解决：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select e.emp_no from employees as e left join dept_manager as d on e.emp_no =d.emp_no where d.dept_no is null</span><br></pre></td></tr></table></figure><h2 id="4-题目描述"><a href="#4-题目描述" class="headerlink" title="4.题目描述"></a>4.题目描述</h2><blockquote><p>获取所有员工当前的manager，如果当前的manager是自己的话结果不显示，当前表示to_date=’9999-01-01’。<br>结果第一列给出当前员工的emp_no,第二列给出其manager对应的manager_no。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt; CREATE TABLE `dept_emp` (</span><br><span class="line">&gt; `emp_no` int(11) NOT NULL,</span><br><span class="line">&gt; `dept_no` char(4) NOT NULL,</span><br><span class="line">&gt; `from_date` date NOT NULL,</span><br><span class="line">&gt; `to_date` date NOT NULL,</span><br><span class="line">&gt; PRIMARY KEY (`emp_no`,`dept_no`));</span><br><span class="line">&gt; </span><br><span class="line">&gt; CREATE TABLE `dept_manager` (</span><br><span class="line">&gt; `dept_no` char(4) NOT NULL,</span><br><span class="line">&gt; `emp_no` int(11) NOT NULL,</span><br><span class="line">&gt; `from_date` date NOT NULL,</span><br><span class="line">&gt; `to_date` date NOT NULL,</span><br><span class="line">&gt; PRIMARY KEY (`emp_no`,`dept_no`));</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>解决：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select e.emp_no, m.emp_no as manager_no from dept_emp as e inner join dept_manager as m on e.dept_no = m.dept_no where e.to_date = &apos;9999-01-01&apos; and m.to_date = &apos;9999-01-01&apos; and e.emp_no != m.emp_no;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL数据库 </tag>
            
            <tag> MySQL数据库练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL练习</title>
      <link href="/2019/01/02/MySQL%E7%BB%83%E4%B9%A0/"/>
      <url>/2019/01/02/MySQL%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p><strong>MySQL基本查询得练习（基础部分）</strong></p><p>MySQL学习得关键多连多练多练！！！</p><a id="more"></a><h1 id="MySQL小练"><a href="#MySQL小练" class="headerlink" title="MySQL小练"></a>MySQL小练</h1><h2 id="06-MySQL基本查询"><a href="#06-MySQL基本查询" class="headerlink" title="06-MySQL基本查询"></a>06-MySQL基本查询</h2><h3 id="1-题目描述"><a href="#1-题目描述" class="headerlink" title="1. 题目描述"></a>1. 题目描述</h3><blockquote><p>对于表actor批量插入如下数据<br>`</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; CREATE TABLE  IF NOT EXISTS actor  (`</span><br><span class="line">&gt; `actor_id  smallint(5)  NOT NULL PRIMARY KEY,`</span><br><span class="line">&gt; `first_name  varchar(45) NOT NULL,`</span><br><span class="line">&gt; `last_name  varchar(45) NOT NULL,`</span><br><span class="line">&gt; `last_update  timestamp NOT NULL DEFAULT (datetime(&apos;now&apos;,&apos;localtime&apos;)))`</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote><p><strong>解答：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">insert into actor(actor_id,first_name,last_name,last_update) values</span><br><span class="line">(1,&apos;PENELOPE&apos;,&apos;GUINESS&apos;,&apos;2006-02-15 12:34:33 &apos;),</span><br><span class="line">(2,&apos;NICK&apos;,&apos;WAHLBERG&apos;,&apos;2006-02-15 12:34:33&apos;);</span><br></pre></td></tr></table></figure><h3 id="2-题目描述"><a href="#2-题目描述" class="headerlink" title="2. 题目描述"></a>2. 题目描述</h3><blockquote><p>找出所有员工当前(to_date=’9999-01-01’)具体的薪水salary情况，对于相同的薪水只显示一次,并按照逆序显示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; CREATE TABLE `salaries` (</span><br><span class="line">&gt; `emp_no` int(11) NOT NULL,</span><br><span class="line">&gt; `salary` int(11) NOT NULL,</span><br><span class="line">&gt; `from_date` date NOT NULL,</span><br><span class="line">&gt; `to_date` date NOT NULL,</span><br><span class="line">&gt; PRIMARY KEY (`emp_no`,`from_date`));</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote><p><strong>解答：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select distinct salary from salaries where to_date = &apos;9999-01-01&apos; order by salary desc;</span><br></pre></td></tr></table></figure><h3 id="3-题目描述"><a href="#3-题目描述" class="headerlink" title="3. 题目描述"></a>3. 题目描述</h3><blockquote><p>查找最晚入职员工的所有信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&gt; CREATE TABLE `employees` (</span><br><span class="line">&gt; `emp_no` int(11) NOT NULL,</span><br><span class="line">&gt; `birth_date` date NOT NULL,</span><br><span class="line">&gt; `first_name` varchar(14) NOT NULL,</span><br><span class="line">&gt; `last_name` varchar(16) NOT NULL,</span><br><span class="line">&gt; `gender` char(1) NOT NULL,</span><br><span class="line">&gt; `hire_date` date NOT NULL,</span><br><span class="line">&gt;  PRIMARY KEY (`emp_no`));</span><br><span class="line">&gt; </span><br><span class="line">&gt; **解答：</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from employees order by hire_date desc limit 1;</span><br></pre></td></tr></table></figure><h3 id="4-题目描述"><a href="#4-题目描述" class="headerlink" title="4. 题目描述"></a>4. 题目描述</h3><blockquote><p>查找入职员工时间排名倒数第三的员工所有信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; CREATE TABLE `employees` (</span><br><span class="line">&gt; `emp_no` int(11) NOT NULL,</span><br><span class="line">&gt; `birth_date` date NOT NULL,</span><br><span class="line">&gt; `first_name` varchar(14) NOT NULL,</span><br><span class="line">&gt; `last_name` varchar(16) NOT NULL,</span><br><span class="line">&gt; `gender` char(1) NOT NULL,</span><br><span class="line">&gt; `hire_date` date NOT NULL,</span><br><span class="line">&gt; PRIMARY KEY (`emp_no`));</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote><p><strong>解答：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from employees order by hire_date desc limit 2,1;</span><br></pre></td></tr></table></figure><h3 id="5-题目描述"><a href="#5-题目描述" class="headerlink" title="5. 题目描述"></a>5. 题目描述</h3><blockquote><p>查找薪水涨幅超过15次的员工号emp_no以及其对应的涨幅次数t</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; CREATE TABLE `salaries` (</span><br><span class="line">&gt; `emp_no` int(11) NOT NULL,</span><br><span class="line">&gt; `salary` int(11) NOT NULL,</span><br><span class="line">&gt; `from_date` date NOT NULL,</span><br><span class="line">&gt; `to_date` date NOT NULL,</span><br><span class="line">&gt; PRIMARY KEY (`emp_no`,`from_date`));</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select emp_no , count(distinct salary) t from salaries group by emp_no having t&gt;15;</span><br></pre></td></tr></table></figure><h3 id="6-题目描述"><a href="#6-题目描述" class="headerlink" title="6. 题目描述"></a>6. 题目描述</h3><blockquote><p>获取所有部门当前manager的当前薪水情况，给出dept_no, emp_no以及salary，当前表示to_date=’9999-01-01’</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt; CREATE TABLE `dept_manager` (</span><br><span class="line">&gt; `dept_no` char(4) NOT NULL,</span><br><span class="line">&gt; `emp_no` int(11) NOT NULL,</span><br><span class="line">&gt; `from_date` date NOT NULL,</span><br><span class="line">&gt; `to_date` date NOT NULL,</span><br><span class="line">&gt; PRIMARY KEY (`emp_no`,`dept_no`));</span><br><span class="line">&gt; CREATE TABLE `salaries` (</span><br><span class="line">&gt; `emp_no` int(11) NOT NULL,</span><br><span class="line">&gt; `salary` int(11) NOT NULL,</span><br><span class="line">&gt; `from_date` date NOT NULL,</span><br><span class="line">&gt; `to_date` date NOT NULL,</span><br><span class="line">&gt; PRIMARY KEY (`emp_no`,`from_date`));</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote><p><strong>解答：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select dept_no, d.emp_no ,salary from salaries as s ,dept_manager as d </span><br><span class="line">where s.emp_no = d.emp_no </span><br><span class="line">and d.to_date = &apos;9999-01-01&apos; </span><br><span class="line">and s.to_date = &apos;9999-01-01&apos;;</span><br></pre></td></tr></table></figure><h3 id="7-题目描述"><a href="#7-题目描述" class="headerlink" title="7. 题目描述"></a>7. 题目描述</h3><blockquote><p>从titles表获取按照title进行分组，每组个数大于等于2，给出title以及对应的数目t。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; CREATE TABLE IF NOT EXISTS &quot;titles&quot; (</span><br><span class="line">&gt; `emp_no` int(11) NOT NULL,</span><br><span class="line">&gt; `title` varchar(50) NOT NULL,</span><br><span class="line">&gt; `from_date` date NOT NULL,</span><br><span class="line">&gt; `to_date` date DEFAULT NULL);</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote><p><strong>解答：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select title ,count(title) t from titles group by title having t&gt;=2;</span><br></pre></td></tr></table></figure><h3 id="8-LeetCode-182-查找重复的电子邮箱"><a href="#8-LeetCode-182-查找重复的电子邮箱" class="headerlink" title="8. LeetCode [182. 查找重复的电子邮箱]"></a>8. LeetCode [182. 查找重复的电子邮箱]</h3><blockquote><p>编写一个 SQL 查询，查找 <code>Person</code> 表中所有重复的电子邮箱。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; Create table If Not Exists Person (</span><br><span class="line">&gt; Id int, </span><br><span class="line">&gt; Email varchar(255)</span><br><span class="line">&gt; );</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote></blockquote><p><strong>解答：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select Email from Person group by Email having count(Email)&gt;1;</span><br></pre></td></tr></table></figure><h3 id="9-LeetCode-595-大的国家"><a href="#9-LeetCode-595-大的国家" class="headerlink" title="9. LeetCode [595.大的国家]"></a>9. LeetCode [595.大的国家]</h3><blockquote><p>这里有张 <code>World</code> 表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; +-----------------+------------+------------+--------------+---------------+</span><br><span class="line">&gt; | name            | continent  | area       | population   | gdp           |</span><br><span class="line">&gt; +-----------------+------------+------------+--------------+---------------+</span><br><span class="line">&gt; | Afghanistan     | Asia       | 652230     | 25500100     | 20343000      |</span><br><span class="line">&gt; | Albania         | Europe     | 28748      | 2831741      | 12960000      |</span><br><span class="line">&gt; | Algeria         | Africa     | 2381741    | 37100000     | 188681000     |</span><br><span class="line">&gt; | Andorra         | Europe     | 468        | 78115        | 3712000       |</span><br><span class="line">&gt; | Angola          | Africa     | 1246700    | 20609294     | 100990000     |</span><br><span class="line">&gt; +-----------------+------------+------------+--------------+---------------+</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>如果一个国家的面积超过300万平方公里，或者人口超过2500万，那么这个国家就是大国家。</p><p>编写一个SQL查询，输出表中所有大国家的名称、人口和面积。</p><p>例如，根据上表，我们应该输出:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt; +--------------+-------------+--------------+</span><br><span class="line">&gt; | name         | population  | area         |</span><br><span class="line">&gt; +--------------+-------------+--------------+</span><br><span class="line">&gt; | Afghanistan  | 25500100    | 652230       |</span><br><span class="line">&gt; | Algeria      | 37100000    | 2381741      |</span><br><span class="line">&gt; +--------------+-------------+--------------+</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>World表：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&gt; Create table If Not Exists World (</span><br><span class="line">&gt; </span><br><span class="line">&gt; name varchar(255), </span><br><span class="line">&gt; </span><br><span class="line">&gt; continent varchar(255), </span><br><span class="line">&gt; </span><br><span class="line">&gt; area int, </span><br><span class="line">&gt; </span><br><span class="line">&gt; population int,</span><br><span class="line">&gt; </span><br><span class="line">&gt; gdp int</span><br><span class="line">&gt; </span><br><span class="line">&gt; )；</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>解答：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select name ,population,area from World where area&gt;3000000 or population&gt;25000000;</span><br></pre></td></tr></table></figure><h3 id="10-LeetCode-177-第N高薪水"><a href="#10-LeetCode-177-第N高薪水" class="headerlink" title="10. LeetCode[177.第N高薪水]"></a>10. LeetCode[177.第N高薪水]</h3><blockquote><p>编写一个 SQL 查询，获取 <code>Employee</code> 表中第 <em>n</em> 高的薪水（Salary）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; +----+--------+</span><br><span class="line">&gt; | Id | Salary |</span><br><span class="line">&gt; +----+--------+</span><br><span class="line">&gt; | 1  | 100    |</span><br><span class="line">&gt; | 2  | 200    |</span><br><span class="line">&gt; | 3  | 300    |</span><br><span class="line">&gt; +----+--------+</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>例如上述 <code>Employee</code> 表，<em>n = 2</em> 时，应返回第二高的薪水 <code>200</code>。如果不存在第 <em>n</em> 高的薪水，那么查询应返回 <code>null</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; +------------------------+</span><br><span class="line">&gt; | getNthHighestSalary(2) |</span><br><span class="line">&gt; +------------------------+</span><br><span class="line">&gt; | 200                    |</span><br><span class="line">&gt; +------------------------+</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><p><strong>解答：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CREATE FUNCTION getNthHighestSalary(N INT) RETURNS INT</span><br><span class="line">BEGIN</span><br><span class="line">  declare M Int;</span><br><span class="line">  Set M = N-1;</span><br><span class="line">  RETURN (</span><br><span class="line">      # Write your MySQL query statement below.</span><br><span class="line">      select distinct Salary from Employee  order by Salary desc LIMIT M,1</span><br><span class="line">  );</span><br><span class="line">END</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL数据库 </tag>
            
            <tag> MySQL数据库练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/05/15/hello-world/"/>
      <url>/2018/05/15/hello-world/</url>
      
        <content type="html"><![CDATA[<p><strong>博客开始2018</strong></p><a id="more"></a><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
